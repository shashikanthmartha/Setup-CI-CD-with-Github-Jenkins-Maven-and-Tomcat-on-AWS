pipeline {
    agent any
    environment {
        GIT_URL = 'https://github.com/shashikanthmartha/Setup-CI-CD-with-Github-Jenkins-Maven-and-Tomcat-on-AWS.git'
        SONARQUBE_SERVER = 'http://localhost:9090'
    tools {
        maven "MAVEN"
        jdk "JDK"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], userRemoteConfigs: [[url: GIT_URL]]])
            }
        }
        echo 'checkout'
        stage('Initialize'){
            steps{
                echo "PATH = ${M2_HOME}/bin:${PATH}"
                echo "M2_HOME = /opt/maven"
            }
        }
        stage('Build') {
            steps {
                sh 'mvn clean install'
            }
        }
        echo 'build sccess'
       /* stage('Build') {
            steps {
                dir("/var/lib/jenkins/workspace/demopipelinetask/my-app") {
                sh 'mvn -B -DskipTests clean package'
                }
            }
        } */
	stage('Static Code Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh 'mvn sonar:sonar'
                }
            }
        }  
         echo 'sonarqube success'
        stage('Deploy to Tomcat') {
            steps {
                sh 'cp target/your-web-app.war $CATALINA_HOME/webapps/'
            }
        }
    echo 'deployed to tomcat'
    post {
       always {
          junit(
        allowEmptyResults: true,
        testResults: '*/test-reports/.xml'
      )
      }
   } 
}
